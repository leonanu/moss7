user  www www;

error_log  /data/logs/nginx/error.log error;
pid        /var/run/nginx.pid;
lock_file  /var/lock/nginx;

worker_rlimit_nofile  51200;
worker_processes      auto;


events {
    worker_connections  8192;
    use epoll;
    multi_accept        on;
}


http {
#core
    include                        mime.types;
    default_type                   application/octet-stream;
    keepalive_timeout              60s;
    tcp_nodelay                    on;
    sendfile                       on;
    tcp_nopush                     on;
    send_timeout                   30s;
    server_names_hash_max_size     512;
    server_tokens                  off;
    etag                           off;


#client body
    client_body_temp_path    /usr/local/nginx/var/tmp/client_body 1 2;
    client_body_buffer_size  16k;
    client_max_body_size     1024m;
    client_body_timeout      30s;

#client header
    client_header_buffer_size    2k;
    large_client_header_buffers  4 8k;
    client_header_timeout        30s;

#index
    index  index.php index.html index.htm;

#fastcgi
    fastcgi_temp_path             /usr/local/nginx/var/tmp/fastcgi 1 2;
    fastcgi_connect_timeout       30s;
    fastcgi_read_timeout          30s;
    fastcgi_send_timeout          30s;
    fastcgi_buffer_size           8k;
    fastcgi_buffers               32 8k;
    fastcgi_busy_buffers_size     32k;
    fastcgi_temp_file_write_size  16k;
    fastcgi_intercept_errors      on;
    fastcgi_index                 index.php;

#proxy
    proxy_temp_path          /usr/local/nginx/var/tmp/proxy;
    proxy_buffer_size        8k;
    proxy_buffering          on;
    proxy_buffers            32 8k;
    proxy_busy_buffers_size  16k;
    proxy_connect_timeout    30s;
    proxy_read_timeout       30s;
    proxy_send_timeout       30s;

#uwsgi
    uwsgi_temp_path  /usr/local/nginx/var/tmp/uwsgi 1 2;

#gzip
    gzip               on;
    gzip_buffers       16 8k;
    gzip_comp_level    1;
    gzip_http_version  1.1;
    gzip_min_length    256;
    gzip_proxied       any;
    gzip_vary          on;
    gzip_types
      text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
      text/javascript application/javascript application/x-javascript
      text/x-json application/json application/x-web-app-manifest+json
      text/css text/plain text/x-component
      font/opentype application/x-font-ttf application/vnd.ms-fontobject
      image/x-icon;

#If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.
    open_file_cache           max=1000 inactive=30s;
    open_file_cache_valid     60s;
    open_file_cache_min_uses  2;
    open_file_cache_errors    on;

#realip module
    #set_real_ip_from  127.0.0.1;
    #real_ip_header    X-Real-IP;
    #real_ip_header    X-Forwarded-For;

#log module
    log_format main '$remote_addr - $remote_user [$time_local] $request '
                    '"$status" $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format moss '$remote_addr | $http_x_forwarded_for | $remote_user | [$time_local] |'
                    ' "$host" | "$request" | $status | $body_bytes_sent |'
                    ' "$http_referer" | "$http_user_agent" | $request_time | $upstream_response_time';

#Headers
  #ident server
    #add_header  Server-ID $hostname;
  #ClickJacking
    #add_header  X-Frame-Options SAMEORIGIN;

#virtualhost
    include  vhosts/*.conf;
}
